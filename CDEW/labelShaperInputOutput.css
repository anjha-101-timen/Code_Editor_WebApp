/* Ensure labels and buttons stay fixed at the top */
.input-label, .output-label {
    position: sticky;
    top: 0; /* Stick to the top of the container */
    z-index: 2;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 5px 25px;
    background-color: #ffffff;
    border-bottom: 5px solid #ffffff;
    font-size: 25px;
    font-weight: 1000;
    color: #000000;
}

/* Constrain the textarea to prevent it from pushing other elements */
.input-area textarea, .output-area textarea {
    width: 100%;
    height: calc(100% - 40px); /* Adjust height to leave space for the label and buttons */
    background: transparent;
    border: none;
    outline: none;
    padding: 20px;
    font-family: 'Ubuntu', monospace;
    font-size: 1.1em;
    font-weight: 500;
    color: #d4d4d4;
    resize: none;
    box-sizing: border-box;
    line-height: 1.6;
    transition: color 0.3s ease;
}

/* Ensure the input/output area has enough space */
.input-area, .output-area {
    min-height: 80px;
    position: relative;
    background: linear-gradient(135deg, #2a2a2a, #1e1e1e);
    border: 1px solid #3a3a3a;
    border-radius: 0px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
    transition: box-shadow 0.3s ease, transform 0.3s ease;
    flex: 1;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
}

/* Ensure the label and buttons are always visible */



.input-output-container {
    min-width: 100px;
    flex: 1 1 40%;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: 5px; /* Add spacing between input and output areas */
}

.input-area:hover, .output-area:hover {
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.5);
    transform: translateY(-2px); /* Slight lift-up effect on hover */
}

.input-area:focus-within, .output-area:focus-within {
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.6);
    border-color: #64B5F6; /* Highlight border color on focus */
}



.input-area textarea::placeholder, .output-area textarea::placeholder {
    color: rgba(255, 255, 255, 0.4);
    transition: opacity 0.3s ease;
}

.input-area textarea:focus::placeholder, .output-area textarea:focus::placeholder {
    opacity: 0; /* Fade out placeholder text on focus */
}

/* Horizontal Shimmer Effect */
.input-area::before, .output-area::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to right, rgba(100, 100, 100, 0.1), rgba(100, 100, 100, 0.05), transparent);
    pointer-events: none;
    z-index: 1;
    animation: shimmer 3s infinite; /* Horizontal shimmer animation */
}

/* Vertical Shimmer Effect */
.input-area::after, .output-area::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, rgba(100, 100, 100, 0.1), rgba(100, 100, 100, 0.05), transparent);
    pointer-events: none;
    z-index: 1;
    animation: verticalShimmer 3s infinite; /* Vertical shimmer animation */
}


/* Horizontal Shimmer Animation */
@keyframes shimmer {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}

/* Vertical Shimmer Animation */
@keyframes verticalShimmer {
    0% {
        transform: translateY(-100%);
    }
    100% {
        transform: translateY(100%);
    }
}


/* .editor-label 
{
    position: sticky;
    z-index: 2;
    font-weight: 600;
    padding: 8px 15px;
    background: linear-gradient(to right, #3a3a3a, #282828);
    border-bottom: 2px solid #454545;
    font-size: 1.1vw;
    color: #e0e0e0;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    transition: background 0.3s ease, box-shadow 0.3s ease;
    cursor: default;
    border-radius: 3px 3px 0 0;
} */

/* .editor-label:hover, .input-label:hover, .output-label:hover {
    background: linear-gradient(to right, #282828, #3a3a3a);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
} */

/* .editor-label 
{
    border-right: 1px solid #454545;
} */

.input-label {
    border-left: 1px solid #454545; /* Add a left border to input label */
}

.output-label {
    border-left: 1px solid #454545; /* Add a left border to output label */
}







.input-buttons, .output-buttons {
    display: flex;
    align-items: center; /* Vertically center the buttons */
    justify-content: center;
    gap: 10px; /* Reduced gap */
}

.input-button {
    background: linear-gradient(90deg, #90EE90, #228B22);
}

.output-button {
    background: linear-gradient(90deg, #ADD8E6, #00008B);
}

.input-button, .output-button {
    background-size: 200% 100%;
    color: white;
    border: none;
    padding: 6px 12px; /* Reduced padding */
    border-radius: 20px; /* Adjusted radius to match smaller size */
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease, background-position 0.5s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Reduced shadow */
    animation: buttonGradient 12s linear infinite;
    font-size: 0.8vw; /* Reduced font size */
    user-select: none;
    position: relative;
    overflow: hidden;
}

.input-button:hover, .output-button:hover {
    transform: translateY(-2px); /* Reduced hover lift */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Reduced shadow on hover */
    background-position: 100% 0;
}

.input-button::before, .output-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.08); /* Reduced opacity */
    opacity: 0;
    transition: opacity 0.3s ease;
}

.input-button:hover::before, .output-button:hover::before {
    opacity: 1;
}

@keyframes buttonGradient {
    0% {
        background-position: 0% 50%;
    }
    100% {
        background-position: 100% 50%;
    }
}

.input-button img, .output-button img {
    width: 30px; /* Reduced image width */
    height: 30px; /* Reduced image height */
    vertical-align: middle;
    opacity: 1;
}


